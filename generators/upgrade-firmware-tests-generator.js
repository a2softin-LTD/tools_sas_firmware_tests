const fs = require('fs');
const path = require('path');

// Reading data from JSON-file
const testData = JSON.parse(fs.readFileSync('resources/test_data.json', 'utf-8'));

// Test template
const generateTest = (userObject, deviceIdHex) => {
    let testNumber = 1;

    console.log(userObject);

    return `
test('[MPX] #${testNumber++}. Device="${deviceIdHex}" - success upgrade a device', { tag: '@sas_upgrade_async_single_user_multiple_devices_json' }, async ({ request }) => {
    const userObject = JSON.parse('${JSON.stringify(userObject)}');
    const deviceIdHex: string = "${deviceIdHex}";
    const deviceIdDec: number = PanelConvertersUtil.serialToDec(deviceIdHex);
        
    console.log("I. TEST PROGRESS");
    console.log('Test started at ' + moment().format('LTS'));
    console.log();

    const totalTestStartTime: number = moment().valueOf();
            
    // Main block
    const testResults: ReportModel =  await singleUserSingleDeviceUpdater(
        request,
        userObject.user,
        userObject.versions.filter(Boolean).join(','),
        deviceIdHex,
        userObject.cycle,
        deviceIdDec,
    );
    
    console.log('Test finished at ' + moment().format('LTS'));
    console.log();
            
    const totalTestFinishTime: number = moment().valueOf();
    const testDate: string = moment().format('YYYY-MM-DD');
    const serialNumberHex: string = deviceIdHex;
    const totalTime: number = Math.round(100 * (totalTestFinishTime - totalTestStartTime) / 1000) / 100;
    const connectionChannel: string = testResults.connectionChannel;
    const upgradeIterationAmount: number = userObject.cycle;
            
    reports(
        testDate,
        serialNumberHex,
        totalTime,
        connectionChannel,
        upgradeIterationAmount,
    );
})`
};

// Generating spec-file for each test scenario
testData.forEach((userObject, index) => {
    for (const deviceIdHex of userObject["deviceIdsHex"]) {
        const fileName = `upgrade-firmware-test-${index++ + 1}-${userObject["user"].email.replace(/[^a-zA-Z]/g, "")}.spec.ts`;
        const testContent = `
import { test } from "@playwright/test";
import { PanelConvertersUtil } from "../../../../src/utils/converters/panel-converters.util";
import { reports } from "../../../../src/utils/reports";
import { ReportModel } from "../../../../models/ReportModel";
import { singleUserSingleDeviceUpdater } from "../../../../utils/updaterTools";
import moment = require("moment");
    
        ${generateTest(userObject, deviceIdHex)};
`;
        fs.writeFileSync(path.join('specs/global/autogenerated/upgrade-firmware', fileName), testContent);
        console.log(`Generated a file: ${fileName}`);
    }
});